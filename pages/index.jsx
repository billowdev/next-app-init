import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { pageLoaded } from "redux/actions/ui";
import { loadArticles } from "redux/actions/aticles";
import { getArticlesData, getArticlesIncluded } from "redux/selectors/articles";
import { loadLocalStorage } from "helpers/useLocalStorage";

export default function Home() {
  const dispatch = useDispatch();
  const articleData = useSelector(getArticlesData);
  const articleIncluded = useSelector(getArticlesIncluded);
  const [dataLocal, setDataLocal] = useState("");
  useEffect(() => {
    dispatch(pageLoaded);
    dispatch(loadArticles());
  }, [dispatch]);

  useEffect(() => {
    setDataLocal(loadLocalStorage("action"));
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>next app init redux</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Launch
          <a href="https://github.com/billowdev/next-redux-app-init">
            next-redux-app-init
          </a>
        </h1>

        <p className={styles.description}>
          Get started by editing
          <code className={styles.code}>pages/index.js</code>
        </p>

        <p className={styles.description}>
          example use localstorage <br />
          <code className={styles.code}>
            key: action value:{dataLocal} <br />
          </code>
        </p>
        <div className={styles.jsonApi}>
          <h2>GitHub JSON API &rarr;</h2>
          <p>test dispatch data</p>
          <div>
            {articleData?.map((data, idx) => {
              return (
                <p key={data.id}>
                  id: {data.id} <br />
                  type: {data.type} <br />
                  title: {data.attributes?.title} <br />
                  body: {data.attributes?.body} <br />
                  - Relationship - <br />
                  id:{articleIncluded[idx].id} <br />
                  type: {articleIncluded[idx].type} <br />
                  name: {articleIncluded[idx].attributes.name}
                </p>
              );
            })}
          </div>
        </div>

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Next.js &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://redux.js.org/" className={styles.card}>
            <h2>Redux &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a href="https://axios-http.com/docs/intro" className={styles.card}>
            <h2>Axios &rarr;</h2>
            <p>
              Axios is a promise-based HTTP Client for node.js and the browser.
            </p>
          </a>

          <a href="https://jestjs.io/" className={styles.card}>
            <h2>Jest &rarr;</h2>
            <p>
              Jest is a delightful JavaScript Testing Framework with a focus on
              simplicity.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://github.com/billowdev/next-redux-app-init"
          target="_blank"
          rel="noopener noreferrer"
        >
          Â© 2022 billowdev All Rights Reserved
        </a>{" "}
      </footer>
    </div>
  );
}
